{"version":3,"sources":["webpack:///./src/components/SignUpForm.js","webpack:///./src/pages/signup.js"],"names":["SignUp","state","loading","handleSubmit","e","setState","preventDefault","props","form","validateFields","err","values","a","async","handleSignup","openNotificationWithIcon","navigate","render","getFieldDecorator","this","onSubmit","className","Item","rules","required","message","type","prefix","style","color","placeholder","valuePropName","initialValue","href","htmlType","to","React","Component","SignUpForm","Form","create","name","signup","isLoggedIn","gridArea","display","alignItems","justifyItems"],"mappings":"6NAOMA,E,4JACJC,MAAQ,CACNC,SAAS,G,EAGXC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,SAAS,IAEzBE,EAAEE,iBAEF,EAAKC,MAAMC,KAAKC,gBAAe,SAAOC,EAAKC,GAAZ,SAAAC,EAAAC,OAAA,mDACxBH,EADwB,kCAAAE,EAAA,MAEJE,YAAaH,IAFT,eAIzBI,YAAyB,UAAW,0BACpCC,mBAAS,SAETD,YACE,QACA,sCATuB,OAa7B,EAAKV,SAAS,CAAEH,SAAS,IAbI,yC,4GAiBjCe,OAAA,WAAU,IACAC,EAAsBC,KAAKZ,MAAMC,KAAjCU,kBACR,OAEM,kBAAC,IAAD,CAAME,SAAUD,KAAKhB,aAAckB,UAAU,cAC3C,uCACA,kBAAC,IAAKC,KAAN,KACGJ,EAAkB,OAAQ,CACzBK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BADpCP,CAGC,kBAAC,IAAD,CACEQ,KAAK,OACLC,OACE,kBAAC,IAAD,CAAMD,KAAK,OAAOE,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,WAIlB,kBAAC,IAAKR,KAAN,KACGJ,EAAkB,QAAS,CAC1BK,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,8BAF9BP,CAKC,kBAAC,IAAD,CACEQ,KAAK,QACLC,OACE,kBAAC,IAAD,CAAMD,KAAK,OAAOE,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,YAIlB,kBAAC,IAAKR,KAAN,KACGJ,EAAkB,WAAY,CAC7BK,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,iCAF9BP,CAKC,kBAAC,IAAD,CACES,OACE,kBAAC,IAAD,CAAMD,KAAK,OAAOE,MAAO,CAAEC,MAAO,qBAEpCH,KAAK,WACLI,YAAY,eAIlB,kBAAC,IAAKR,KAAN,KACGJ,EAAkB,WAAY,CAC7Ba,cAAe,UACfC,cAAc,GAFfd,CAGE,kBAAC,IAAD,qBACH,uBAAGG,UAAU,oBAAoBY,KAAK,0BAAtC,mBAGA,kBAAC,IAAD,CACEP,KAAK,UACLQ,SAAS,SACTb,UAAU,oBACVnB,QAASiB,KAAKlB,MAAMC,SAJtB,WARF,MAgBK,kBAAC,OAAD,CAAMiC,GAAG,UAAT,a,GA5FIC,IAAMC,WAsGZC,EAFIC,IAAKC,OAAO,CAAEC,KAAM,WAApBF,CAAiCvC,GCrGrC,SAAS0C,IAKtB,OAJIC,eACF3B,mBAAS,QAIT,kBAAC,IAAD,KACE,yBACEY,MAAO,CACLgB,SAAU,OACVC,QAAS,OACTC,WAAY,SACZC,aAAc,WAGhB,kBAAC,EAAD,QArBR","file":"component---src-pages-signup-js-f6c1957ab3d51a74f458.js","sourcesContent":["import React from \"react\"\nimport { Form, Icon, Input, Button, Checkbox } from \"./MyStyledComponents\"\nimport { handleSignup } from \"../services/auth\"\nimport { openNotificationWithIcon } from \"./Notifications\"\nimport { navigate, Link } from \"gatsby\"\nimport Layout from \"./layout\"\n\nclass SignUp extends React.Component {\n  state = {\n    loading: false,\n  }\n\n  handleSubmit = e => {\n    this.setState({ loading: true })\n\n    e.preventDefault()\n\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const signedUp = await handleSignup(values)\n        if (signedUp) {\n          openNotificationWithIcon(\"success\", \"Welcome to Transcribr!\")\n          navigate(`/app`)\n        } else {\n          openNotificationWithIcon(\n            \"error\",\n            \"Sorry, email address already taken\"\n          )\n        }\n      }\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n    \n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <h1>Sign Up</h1>\n            <Form.Item>\n              {getFieldDecorator(\"name\", {\n                rules: [{ required: true, message: \"Please input your name!\" }],\n              })(\n                <Input\n                  type=\"name\"\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"name\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"email\", {\n                rules: [\n                  { required: true, message: \"Please input your email!\" },\n                ],\n              })(\n                <Input\n                  type=\"email\"\n                  prefix={\n                    <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Email\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" },\n                ],\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"remember\", {\n                valuePropName: \"checked\",\n                initialValue: true,\n              })(<Checkbox>Remember me</Checkbox>)}\n              <a className=\"login-form-forgot\" href=\"https://www.google.com\">\n                Forgot password\n              </a>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                loading={this.state.loading}\n              >\n                Sign Up\n              </Button>\n              Or <Link to=\"/login\">Log in</Link>\n            </Form.Item>\n          </Form>\n      \n    )\n  }\n}\n\nconst SignUpForm = Form.create({ name: \"SignUp \" })(SignUp)\n\nexport default SignUpForm\n","import React from 'react'\nimport SignUpForm from '../components/SignUpForm'\nimport Layout from '../components/layout'\nimport { isLoggedIn } from '../services/auth'\nimport { navigate } from 'gatsby'\n\nexport default function signup () {\n  if (isLoggedIn()) {\n    navigate('/app')\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          gridArea: 'main',\n          display: 'grid',\n          alignItems: 'center',\n          justifyItems: 'center'\n        }}\n      >\n        <SignUpForm />\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}