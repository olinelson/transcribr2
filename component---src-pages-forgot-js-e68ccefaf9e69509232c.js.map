{"version":3,"sources":["webpack:///./src/components/ForgotPasswordForm.js","webpack:///./src/pages/forgot.js"],"names":["Select","Option","ForgotPasswordForm","useState","loading","setLoading","onFinish","values","a","handleForgotPassword","openNotificationWithIcon","navigate","name","className","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","placeholder","type","htmlType","to","forgot","isLoggedIn","style","display","alignItems","justifyItems","height","gridColumn","gridRow"],"mappings":"gcAQmBA,IAAXC,OA8COC,MA5Cf,WAAgC,IAAD,EACCC,oBAAS,GAAhCC,EADsB,KACbC,EADa,KAGvBC,EAAQ,e,EAAA,G,EAAA,UAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfH,GAAW,GADI,SAEII,YAAqBF,GAFzB,eAIbG,YAAyB,UAAW,8BACpCC,mBAAS,MAETD,YAAyB,QAAS,+BAPrB,0C,+KAAH,sDAgBd,OACE,kBAAC,IAAD,CACEE,KAAK,eACLC,UAAU,aACVC,cAAe,CAAEC,UAAU,GAC3BT,SAAUA,GAGV,kBAAC,IAAKU,KAAN,CACEJ,KAAK,QACLK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,sCAEnC,kBAAC,IAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAcR,UAAU,wBAA0BS,YAAY,WAG/E,kBAAC,IAAKN,KAAN,KACE,kBAAC,IAAD,CAAQZ,QAASA,EAASmB,KAAK,UAAUC,SAAS,SAASX,UAAU,qBAArE,oBAGA,kBAAC,OAAD,CAAMY,GAAG,UAAT,UAJF,OAIqC,kBAAC,OAAD,CAAMA,GAAG,WAAT,c,YC1C5B,SAASC,IACtB,OAAIC,eACFhB,mBAAS,QACF,MAIP,kBAAC,IAAD,KACE,yBACEiB,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,aAAc,SACdC,OAAQ,OACRC,WAAY,OACZC,QAAS,MAGX,kBAAC,EAAD","file":"component---src-pages-forgot-js-e68ccefaf9e69509232c.js","sourcesContent":["import React, { useState } from 'react'\nimport { Icon, Checkbox } from './MyStyledComponents'\nimport { handleForgotPassword } from '../services/auth'\nimport { openNotificationWithIcon } from './Notifications'\nimport { navigate, Link } from 'gatsby'\nimport { Form, Input, Button, Select } from 'antd'\nimport { MailOutlined, UserOutlined, LockOutlined } from '@ant-design/icons'\n\nconst { Option } = Select\n\nfunction ForgotPasswordForm () {\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values) => {\n    setLoading(true)\n    const sent = await handleForgotPassword(values)\n    if (sent) {\n      openNotificationWithIcon('success', 'Password Reset Email Sent!')\n      navigate('/')\n    } else {\n      openNotificationWithIcon('error', 'Sorry, something went wrong')\n    }\n  }\n\n  const onFinishFailed = errorInfo => {\n    setLoading(false)\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <Form\n      name='normal_login'\n      className='login-form'\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n    >\n\n      <Form.Item\n        name='email'\n        rules={[{ required: true, message: 'Please input your Email Address!' }]}\n      >\n        <Input prefix={<UserOutlined className='site-form-item-icon' />} placeholder='Email' />\n      </Form.Item>\n\n      <Form.Item>\n        <Button loading={loading} type='primary' htmlType='submit' className='login-form-button'>\n          Send Reset Email\n        </Button>\n        <Link to='/login'>Log In</Link> Or <Link to='/signup'>Sign Up</Link>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default ForgotPasswordForm\n","import React from 'react'\nimport ForgotPassowordForm from '../components/ForgotPasswordForm'\nimport Layout from '../components/layout'\nimport { isLoggedIn } from '../services/auth'\nimport { navigate } from 'gatsby'\n\nexport default function forgot () {\n  if (isLoggedIn()) {\n    navigate('/app')\n    return null\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          display: 'grid',\n          alignItems: 'center',\n          justifyItems: 'center',\n          height: '100%',\n          gridColumn: '1/-1',\n          gridRow: '2'\n        }}\n      >\n        <ForgotPassowordForm />\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}