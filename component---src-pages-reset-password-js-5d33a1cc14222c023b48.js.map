{"version":3,"sources":["webpack:///./src/components/ResetPasswordForm.js","webpack:///./src/pages/resetPassword.js"],"names":["WithLocation","props","form","Form","useForm","useState","loading","setLoading","token","queryString","parse","location","search","onFinish","values","a","handleResetPassword","openNotificationWithIcon","navigate","style","minWidth","Item","hasFeedback","name","rules","required","message","min","pattern","Password","placeholder","className","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","type","htmlType","forgot","isLoggedIn","display","alignItems","justifyItems","height","gridColumn","gridRow"],"mappings":"idAsFeA,mBA5Ef,SAA4BC,GAAQ,IAC3BC,EAAQC,IAAKC,UADa,KAGHC,oBAAS,GAAhCC,EAH0B,KAGjBC,EAHiB,KAKzBC,EAAUC,IAAYC,MAAMT,EAAMU,SAASC,QAA3CJ,MAEFK,EAAQ,e,EAAA,G,EAAA,UAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfR,GAAW,GADI,SAEIS,YAAoB,OAAD,UACjCF,EADiC,CAEpCN,WAJa,eAQbS,YAAyB,UAAW,mCACpCC,mBAAS,UAETD,YAAyB,QAAS,+BAClCV,GAAW,IAZE,0C,+KAAH,sDAgBd,OACE,kBAAC,IAAD,CACEY,MAAO,CAAEC,SAAU,mBACnBlB,KAAMA,EACNW,SAAUA,GAEV,8CACA,kBAAC,IAAKQ,KAAN,CACEC,aAAW,EACXC,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,+BAC3B,CAAEC,IAAK,EAAGD,QAAS,+CACnB,CAAEE,QAAS,qBAAsBF,QAAS,mDAG5C,kBAAC,IAAMG,SAAP,CAAgBC,YAAY,kBAG9B,kBAAC,IAAKT,KAAN,CACEE,KAAK,UAELQ,UAAU,aACVC,aAAc,CAAC,YACfV,aAAW,EACXE,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAEX,gBAAGO,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACXC,EAAMC,GACf,OAAKA,GAASH,EAAc,cAAgBG,EAIrCC,QAAQC,OAAO,oDAHbD,QAAQE,eAQvB,kBAAC,IAAMV,SAAP,CAAgBC,YAAY,0BAG9B,kBAAC,IAAKT,KAAN,KACE,kBAAC,IAAD,CAAQf,QAASA,EAASkC,KAAK,UAAUC,SAAS,SAASV,UAAU,qBAArE,c,YCxEO,SAASW,IACtB,OAAIC,eACFzB,mBAAS,QACF,MAIP,kBAAC,IAAD,KACE,yBACEC,MAAO,CACLyB,QAAS,OACTC,WAAY,SACZC,aAAc,SACdC,OAAQ,OACRC,WAAY,OACZC,QAAS,MAGX,kBAAC,EAAD","file":"component---src-pages-reset-password-js-5d33a1cc14222c023b48.js","sourcesContent":["import React, { useState } from 'react'\nimport { handleResetPassword } from '../services/auth'\nimport { openNotificationWithIcon } from './Notifications'\nimport { navigate } from 'gatsby'\nimport WithLocation from './WithLocation'\nimport queryString from 'query-string'\nimport { UserOutlined } from '@ant-design/icons'\n\nimport { Form, Input, Button } from 'antd'\n\nfunction ResetPasswordForm (props) {\n  const [form] = Form.useForm()\n\n  const [loading, setLoading] = useState(false)\n\n  const { token } = queryString.parse(props.location.search)\n\n  const onFinish = async (values) => {\n    setLoading(true)\n    const sent = await handleResetPassword({\n      ...values,\n      token\n    })\n\n    if (sent) {\n      openNotificationWithIcon('success', 'Password reset, logging you  in')\n      navigate('/app')\n    } else {\n      openNotificationWithIcon('error', 'Sorry, something went wrong')\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Form\n      style={{ minWidth: 'min(15rem,90vw)' }}\n      form={form}\n      onFinish={onFinish}\n    >\n      <h1>Reset Password</h1>\n      <Form.Item\n        hasFeedback\n        name='password'\n        rules={[\n          { required: true, message: 'Please input your Password!' },\n          { min: 6, message: 'Password must be at least 6 characters long' },\n          { pattern: '^((?!password).)*$', message: 'Password must not contain the word \"password\"' }\n        ]}\n      >\n        <Input.Password placeholder='new password' />\n      </Form.Item>\n\n      <Form.Item\n        name='confirm'\n        // label='Confirm Password'\n        className='login-form'\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!'\n          },\n          ({ getFieldValue }) => ({\n            validator (rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve()\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!')\n            }\n          })\n        ]}\n      >\n        <Input.Password placeholder='confirm new password' />\n      </Form.Item>\n\n      <Form.Item>\n        <Button loading={loading} type='primary' htmlType='submit' className='login-form-button'>\n          Reset\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default WithLocation(ResetPasswordForm)\n","import React from 'react'\nimport ResetPasswordForm from '../components/ResetPasswordForm'\nimport Layout from '../components/layout'\nimport { isLoggedIn } from '../services/auth'\nimport { navigate } from 'gatsby'\n\nexport default function forgot () {\n  if (isLoggedIn()) {\n    navigate('/app')\n    return null\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          display: 'grid',\n          alignItems: 'center',\n          justifyItems: 'center',\n          height: '100%',\n          gridColumn: '1/-1',\n          gridRow: '2'\n        }}\n      >\n        <ResetPasswordForm />\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}