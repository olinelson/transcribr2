{"version":3,"sources":["webpack:///./src/components/LoginForm.js","webpack:///./src/pages/login.js"],"names":["Login","state","loading","handleSubmit","e","setState","preventDefault","props","form","validateFields","err","values","a","async","handleLogin","openNotificationWithIcon","navigate","render","getFieldDecorator","this","onSubmit","className","Item","rules","required","message","type","prefix","style","color","placeholder","valuePropName","initialValue","to","htmlType","React","Component","WrappedNormalLoginForm","Form","create","name","login","isLoggedIn","gridColumn","gridRow","display","alignItems","justifyItems","LoginForm"],"mappings":"4NAOMA,E,4JACJC,MAAQ,CACNC,SAAS,G,EAGXC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,SAAS,IAEzBE,EAAEE,iBACF,EAAKC,MAAMC,KAAKC,gBAAe,SAAOC,EAAKC,GAAZ,SAAAC,EAAAC,OAAA,mDACxBH,EADwB,kCAAAE,EAAA,MAEQE,YAAYH,IAFpB,eAIzBI,YAAyB,UAAW,cACpCC,mBAAS,SAETD,YAAyB,QAAS,qCAPT,OAU7B,EAAKV,SAAS,CAAEH,SAAS,IAVI,yC,4GAcjCe,OAAA,WAAU,IACAC,EAAsBC,KAAKZ,MAAMC,KAAjCU,kBACR,OACE,kBAAC,IAAD,CAAME,SAAUD,KAAKhB,aAAckB,UAAU,cAC3C,qCACA,kBAAC,IAAKC,KAAN,KACGJ,EAAkB,QAAS,CAC1BK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BADpCP,CAGC,kBAAC,IAAD,CACEQ,KAAK,QACLC,OAAQ,kBAAC,IAAD,CAAMD,KAAK,OAAOE,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,YAIlB,kBAAC,IAAKR,KAAN,KACGJ,EAAkB,WAAY,CAC7BK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADpCP,CAGC,kBAAC,IAAD,CACES,OAAQ,kBAAC,IAAD,CAAMD,KAAK,OAAOE,MAAO,CAAEC,MAAO,qBAC1CH,KAAK,WACLI,YAAY,eAIlB,kBAAC,IAAKR,KAAN,KACGJ,EAAkB,WAAY,CAC7Ba,cAAe,UACfC,cAAc,GAFfd,CAGE,kBAAC,IAAD,qBACH,kBAAC,OAAD,CAAMG,UAAU,oBAAoBY,GAAG,eAAvC,mBAGA,kBAAC,IAAD,CACEP,KAAK,UACLQ,SAAS,SACTb,UAAU,oBACVnB,QAASiB,KAAKlB,MAAMC,SAJtB,UARF,MAgBK,kBAAC,OAAD,CAAM+B,GAAG,WAAT,oB,GAlEOE,IAAMC,WA2EXC,EAFgBC,IAAKC,OAAO,CAAEC,KAAM,gBAApBF,CAAsCtC,GC1EtD,SAASyC,IAKtB,OAJIC,eACF1B,mBAAS,QAIT,kBAAC,IAAD,KACE,yBACEY,MAAO,CACLe,WAAY,OACZC,QAAS,IACTC,QAAS,OACTC,WAAY,SACZC,aAAc,WAGhB,kBAACC,EAAD,QAtBR","file":"component---src-pages-login-js-782959bd54e3fea5cba2.js","sourcesContent":["import React from \"react\"\nimport { Form, Icon, Input, Button, Checkbox } from \"./MyStyledComponents\"\nimport { handleLogin } from \"../services/auth\"\nimport { openNotificationWithIcon } from \"./Notifications\"\nimport { navigate, Link } from \"gatsby\"\nimport Layout from \"./layout\"\n\nclass Login extends React.Component {\n  state = {\n    loading: false,\n  }\n\n  handleSubmit = e => {\n    this.setState({ loading: true })\n\n    e.preventDefault()\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const loggedInSuccessfully = await handleLogin(values)\n        if (loggedInSuccessfully) {\n          openNotificationWithIcon(\"success\", \"Logged In!\")\n          navigate(`/app`)\n        } else {\n          openNotificationWithIcon(\"error\", \"Sorry, wrong email or password...\")\n        }\n      }\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <h1>Login</h1>\n        <Form.Item>\n          {getFieldDecorator(\"email\", {\n            rules: [{ required: true, message: \"Please input your email!\" }],\n          })(\n            <Input\n              type=\"email\"\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Email\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator(\"remember\", {\n            valuePropName: \"checked\",\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)}\n          <Link className=\"login-form-forgot\" to=\"/app/forgot\">\n            Forgot password\n          </Link>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n            loading={this.state.loading}\n          >\n            Log in\n          </Button>\n          Or <Link to=\"/signup\">register now!</Link>\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(Login)\n\nexport default WrappedNormalLoginForm\n","import React from \"react\"\nimport LoginForm from \"../components/LoginForm\"\nimport Layout from \"../components/layout\"\nimport { isLoggedIn } from \"../services/auth\"\nimport { navigate } from \"gatsby\"\n\nexport default function login() {\n  if (isLoggedIn()) {\n    navigate(\"/app\")\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          gridColumn: \"1/-1\",\n          gridRow: \"2\",\n          display: \"grid\",\n          alignItems: \"center\",\n          justifyItems: \"center\",\n        }}\n      >\n        <LoginForm />\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}