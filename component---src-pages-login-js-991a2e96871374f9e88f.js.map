{"version":3,"sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/LockOutlined.js","webpack:///./src/components/LoginForm.js","webpack:///./src/pages/login.js"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","LoginForm","useState","loading","setLoading","onFinish","values","a","handleLogin","navigate","name","className","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","to","htmlType","login","isLoggedIn","style","gridArea","display","alignItems","justifyItems"],"mappings":"sHAmBe,EAjBI,CACjB,KAAQ,OACR,MAAS,WACT,KAAQ,CACN,IAAO,MACP,MAAS,CACP,QAAW,gBACX,UAAa,SAEf,SAAY,CAAC,CACX,IAAO,OACP,MAAS,CACP,EAAK,4V,YCPT,EAAe,SAAsBA,EAAOC,GAC9C,OAAO,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CAC5DC,IAAKA,EACLI,KAAM,MAIV,EAAaC,YAAc,eACZ,iBAAiB,I,0XCkDjBC,MAzDf,WAAuB,IAAD,EACUC,oBAAS,GAAhCC,EADa,KACJC,EADI,KAGdC,EAAQ,e,EAAA,G,EAAA,UAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfH,GAAW,GADI,SAEoBI,YAAYF,GAFhC,cAIbG,mBAAS,QAETL,GAAW,GANE,0C,+KAAH,sDAUd,OACE,kBAAC,IAAD,CACEM,KAAK,eACLC,UAAU,aACVC,cAAe,CAAEC,UAAU,GAC3BR,SAAUA,GAEV,qCACA,kBAAC,IAAKS,KAAN,CACEJ,KAAK,QACLK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,sCAEnC,kBAAC,IAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAcR,UAAU,wBAA0BS,YAAY,WAE/E,kBAAC,IAAKN,KAAN,CACEJ,KAAK,WACLK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEnC,kBAAC,IAAD,CACEC,OAAQ,kBAACG,EAAA,EAAD,CAAcV,UAAU,wBAChCW,KAAK,WACLF,YAAY,cAGhB,kBAAC,IAAKN,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAWJ,KAAK,WAAWa,cAAc,UAAUC,SAAO,GACxD,kBAAC,IAAD,qBAGF,kBAAC,OAAD,CAAMC,GAAG,WAAT,oBAKF,kBAAC,IAAKX,KAAN,KACE,kBAAC,IAAD,CAAQX,QAASA,EAASmB,KAAK,UAAUI,SAAS,SAASf,UAAU,qBAArE,UADF,MAIK,kBAAC,OAAD,CAAMc,GAAG,WAAT,mB,YCrDI,SAASE,IAKtB,OAJIC,eACFnB,mBAAS,QAIT,kBAAC,IAAD,KACE,yBACEoB,MAAO,CACLC,SAAU,OACVC,QAAS,OACTC,WAAY,SACZC,aAAc,WAGhB,kBAAC,EAAD","file":"component---src-pages-login-js-991a2e96871374f9e88f.js","sourcesContent":["// This icon file is generated automatically.\n// tslint:disable\nvar LockOutlined = {\n  \"name\": \"lock\",\n  \"theme\": \"outlined\",\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\"\n      }\n    }]\n  }\n};\nexport default LockOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default React.forwardRef(LockOutlined);","import React, { useState } from 'react'\nimport { Checkbox } from './MyStyledComponents'\nimport { handleLogin } from '../services/auth'\nimport { navigate, Link } from 'gatsby'\n\nimport { Form, Input, Button } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\n\nfunction LoginForm () {\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values) => {\n    setLoading(true)\n    const loggedInSuccessfully = await handleLogin(values)\n    if (loggedInSuccessfully) {\n      navigate('/app')\n    } else {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Form\n      name='normal_login'\n      className='login-form'\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n    >\n      <h1>Login</h1>\n      <Form.Item\n        name='email'\n        rules={[{ required: true, message: 'Please input your Email Address!' }]}\n      >\n        <Input prefix={<UserOutlined className='site-form-item-icon' />} placeholder='Email' />\n      </Form.Item>\n      <Form.Item\n        name='password'\n        rules={[{ required: true, message: 'Please input your Password!' }]}\n      >\n        <Input\n          prefix={<LockOutlined className='site-form-item-icon' />}\n          type='password'\n          placeholder='Password'\n        />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name='remember' valuePropName='checked' noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Link to='/forgot'>\n          Forgot password\n        </Link>\n      </Form.Item>\n\n      <Form.Item>\n        <Button loading={loading} type='primary' htmlType='submit' className='login-form-button'>\n          Log in\n        </Button>\n        Or <Link to='/signup'>Sign Up Now!</Link>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport LoginForm from '../components/LoginForm'\nimport Layout from '../components/layout'\nimport { isLoggedIn } from '../services/auth'\nimport { navigate } from 'gatsby'\n\nexport default function login () {\n  if (isLoggedIn()) {\n    navigate('/app')\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          gridArea: 'main',\n          display: 'grid',\n          alignItems: 'center',\n          justifyItems: 'center'\n        }}\n      >\n        <LoginForm />\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}