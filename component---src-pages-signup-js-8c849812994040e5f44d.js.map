{"version":3,"sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","webpack:///./node_modules/@ant-design/icons/es/icons/LockOutlined.js","webpack:///./src/components/SignUpForm.js","webpack:///./src/pages/signup.js"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","LoginForm","form","Form","useForm","useState","loading","setLoading","onFinish","values","a","handleSignup","navigate","style","minWidth","name","className","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","placeholder","type","hasFeedback","min","pattern","Password","LockOutlined","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","valuePropName","noStyle","to","htmlType","signup","isLoggedIn","gridArea","display","alignItems","justifyItems","SignUpForm"],"mappings":"sHAmBe,EAjBI,CACjB,KAAQ,OACR,MAAS,WACT,KAAQ,CACN,IAAO,MACP,MAAS,CACP,QAAW,gBACX,UAAa,SAEf,SAAY,CAAC,CACX,IAAO,OACP,MAAS,CACP,EAAK,4V,YCPT,EAAe,SAAsBA,EAAOC,GAC9C,OAAO,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CAC5DC,IAAKA,EACLI,KAAM,MAIV,EAAaC,YAAc,eACZ,iBAAiB,I,0XCwFjBC,MA/Ff,WAAuB,IACdC,EAAQC,IAAKC,UADA,KAGUC,oBAAS,GAAhCC,EAHa,KAGJC,EAHI,KAKdC,EAAQ,e,EAAA,G,EAAA,UAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfH,GAAW,GADI,SAEQI,YAAaF,GAFrB,cAIbG,mBAAS,QAETL,GAAW,GANE,0C,+KAAH,sDAUd,OACE,kBAAC,IAAD,CACEL,KAAMA,EACNW,MAAO,CAAEC,SAAU,mBACnBC,KAAK,eACLC,UAAU,aACVC,cAAe,CAAEC,UAAU,GAC3BV,SAAUA,GAEV,uCACA,kBAAC,IAAKW,KAAN,CACEJ,KAAK,OACLK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4BAEnC,kBAAC,IAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAcR,UAAU,wBAA0BS,YAAY,UAE/E,kBAAC,IAAKN,KAAN,CACEJ,KAAK,QACLK,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,oCAC3B,CAAEI,KAAM,QAASJ,QAAS,sCAG5B,kBAAC,IAAD,CAAOC,OAAQ,kBAACC,EAAA,EAAD,CAAcR,UAAU,wBAA0BS,YAAY,WAE/E,kBAAC,IAAKN,KAAN,CACEQ,aAAW,EACXZ,KAAK,WACLK,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,+BAC3B,CAAEM,IAAK,EAAGN,QAAS,+CACnB,CAAEO,QAAS,qBAAsBP,QAAS,mDAG5C,kBAAC,IAAMQ,SAAP,CAAgBP,OAAQ,kBAACQ,EAAA,EAAD,CAAcf,UAAU,wBAA0BS,YAAY,cAGxF,kBAAC,IAAKN,KAAN,CACEJ,KAAK,UAELiB,aAAc,CAAC,YACfL,aAAW,EACXP,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAEX,gBAAGW,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACXC,EAAMC,GACf,OAAKA,GAASH,EAAc,cAAgBG,EAIrCC,QAAQC,OAAO,oDAHbD,QAAQE,eAQvB,kBAAC,IAAMT,SAAP,CAAgBP,OAAQ,kBAACQ,EAAA,EAAD,CAAcf,UAAU,wBAA0BS,YAAY,sBAExF,kBAAC,IAAKN,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAWJ,KAAK,WAAWyB,cAAc,UAAUC,SAAO,GACxD,kBAAC,IAAD,qBAGF,kBAAC,OAAD,CAAMC,GAAG,WAAT,oBAKF,kBAAC,IAAKvB,KAAN,KACE,kBAAC,IAAD,CAAQb,QAASA,EAASoB,KAAK,UAAUiB,SAAS,SAAS3B,UAAU,qBAArE,WADF,MAIK,kBAAC,OAAD,CAAM0B,GAAG,UAAT,a,YC3FI,SAASE,IAKtB,OAJIC,eACFjC,mBAAS,QAIT,kBAAC,IAAD,KACE,yBACEC,MAAO,CACLiC,SAAU,OACVC,QAAS,OACTC,WAAY,SACZC,aAAc,WAGhB,kBAACC,EAAD","file":"component---src-pages-signup-js-8c849812994040e5f44d.js","sourcesContent":["// This icon file is generated automatically.\n// tslint:disable\nvar LockOutlined = {\n  \"name\": \"lock\",\n  \"theme\": \"outlined\",\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\"\n      }\n    }]\n  }\n};\nexport default LockOutlined;","import \"core-js/modules/es6.object.assign\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default React.forwardRef(LockOutlined);","import React, { useState } from 'react'\nimport { Checkbox } from './MyStyledComponents'\nimport { handleSignup } from '../services/auth'\nimport { navigate, Link } from 'gatsby'\n\nimport { Form, Input, Button } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\n\nfunction LoginForm () {\n  const [form] = Form.useForm()\n\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = async (values) => {\n    setLoading(true)\n    const signedUp = await handleSignup(values)\n    if (signedUp) {\n      navigate('/app')\n    } else {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      style={{ minWidth: 'min(20rem,90vw)' }}\n      name='normal_login'\n      className='login-form'\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n    >\n      <h1>Sign Up</h1>\n      <Form.Item\n        name='name'\n        rules={[{ required: true, message: 'Please input your name' }]}\n      >\n        <Input prefix={<UserOutlined className='site-form-item-icon' />} placeholder='Name' />\n      </Form.Item>\n      <Form.Item\n        name='email'\n        rules={[\n          { required: true, message: 'Please input your Email Address!' },\n          { type: 'email', message: 'Please use a valid email address' }\n        ]}\n      >\n        <Input prefix={<UserOutlined className='site-form-item-icon' />} placeholder='Email' />\n      </Form.Item>\n      <Form.Item\n        hasFeedback\n        name='password'\n        rules={[\n          { required: true, message: 'Please input your Password!' },\n          { min: 6, message: 'Password must be at least 6 characters long' },\n          { pattern: '^((?!password).)*$', message: 'Password must not contain the word \"password\"' }\n        ]}\n      >\n        <Input.Password prefix={<LockOutlined className='site-form-item-icon' />} placeholder='Password' />\n      </Form.Item>\n\n      <Form.Item\n        name='confirm'\n        // label='Confirm Password'\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!'\n          },\n          ({ getFieldValue }) => ({\n            validator (rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve()\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!')\n            }\n          })\n        ]}\n      >\n        <Input.Password prefix={<LockOutlined className='site-form-item-icon' />} placeholder='Confirm password' />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name='remember' valuePropName='checked' noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Link to='/forgot'>\n          Forgot password\n        </Link>\n      </Form.Item>\n\n      <Form.Item>\n        <Button loading={loading} type='primary' htmlType='submit' className='login-form-button'>\n         Sign Up\n        </Button>\n        Or <Link to='/login'>Log In</Link>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport SignUpForm from '../components/SignUpForm'\nimport Layout from '../components/layout'\nimport { isLoggedIn } from '../services/auth'\nimport { navigate } from 'gatsby'\n\nexport default function signup () {\n  if (isLoggedIn()) {\n    navigate('/app')\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          gridArea: 'main',\n          display: 'grid',\n          alignItems: 'center',\n          justifyItems: 'center'\n        }}\n      >\n        <SignUpForm />\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}